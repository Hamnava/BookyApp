@{
    ViewData["Title"] = "Home Page";
}

@{
    ViewData["Title"] = "Home Page";
}

<h2>Send and Receive Messages</h2>

<div class="d-flex col-4 my-5">
    <input class="form-control me-2" id="messageInput" type="text" placeholder="Type your message">
    <button class="btn btn-primary" id="sendButton">Send</button>
</div>
<ul id="messageList"></ul>

<h3>Connected Clients</h3>

<div id="clientList" class="row"></div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.0/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    let selectedClientId = null;

    connection.on("ReceiveMessage", function (user, message) {
        const li = document.createElement("li");
        li.textContent = `${user}: ${message}`;
        document.getElementById("messageList").appendChild(li);
    });

    connection.on("UpdateClientList", function (clients) {
        const clientList = document.getElementById("clientList");
        clientList.innerHTML = ""; // Clear current list
        clients.forEach(client => {
            const statusClass = client.isOnline ? 'text-success' : 'text-danger';
            const statusText = client.isOnline ? 'online' : 'offline';
            const card = document.createElement('div');
            card.className = 'rounded-2 shadow p-2 col-3 me-3 my-4';
            card.innerHTML = `
                    <div class="d-flex justify-content-between">
                        <p>Client type: ${client.clientType}</p>
                        <p class="${statusClass}" id="status-${client.uniqueClientId}">${statusText}</p>
                    </div>
                    <p>Device Id: ${client.deviceId}</p>
                    <p>Connection Id: ${client.connectionId}</p>
                    <button class="btn btn-secondary selectClientButton" data-connectionid="${client.connectionId}" ${!client.isOnline ? 'disabled' : ''}>Select</button>
                `;
            clientList.appendChild(card);
        });

        document.querySelectorAll('.selectClientButton').forEach(button => {
            button.addEventListener('click', function () {
                // Deselect previous selection
                document.querySelectorAll('.selectClientButton').forEach(btn => {
                    btn.disabled = false;
                    btn.closest('.col-3').style.border = 'none';
                });

                // Select new client
                selectedClientId = this.getAttribute('data-connectionid');
                this.disabled = true;
                this.closest('.col-3').style.border = '2px solid green';
            });
        });
    });

    connection.on("ClientStatusChanged", function (uniqueClientId, status) {
        const statusElement = document.getElementById(`status-${uniqueClientId}`);
        if (statusElement) {
            const isOnline = status === 'online';
            statusElement.textContent = status;
            statusElement.className = isOnline ? 'text-success' : 'text-danger';
            const button = statusElement.closest('.col-3').querySelector('.selectClientButton');
            if (button) {
                button.disabled = !isOnline;
                if (!isOnline) {
                    button.closest('.col-3').style.border = 'none';
                }
            }
        }
    });

    connection.start().then(() => {
        // Get the unique client ID (e.g., from localStorage or generate it)
        var uniqueClientId = localStorage.getItem('uniqueClientId') || `client-${Math.random().toString(36).substr(2, 9)}`;
        localStorage.setItem('uniqueClientId', uniqueClientId);

        var deviceId = "Web browser";
        var clientType = "Web";

        connection.invoke("RegisterClient", uniqueClientId, deviceId, clientType).catch(function (err) {
            return console.error(err.toString());
        });
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function () {
        const message = document.getElementById("messageInput").value;
        if (selectedClientId) {
            connection.invoke("SendMessageToClient", selectedClientId, `Web to client ${selectedClientId}`, message).catch(function (err) {
                return console.error(err.toString());
            });
        } else {
            connection.invoke("SendMessage", "Web", message).catch(function (err) {
                return console.error(err.toString());
            });
        }
        document.getElementById("messageInput").value = "";
    });
</script>

